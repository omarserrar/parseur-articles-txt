<article>
<preamble>Levner_2007_Fuzzifying clustering algorithms The case study of MajorClust</preamble>
<titre>Fuzzifying clustering algorithms: The case study of MajorClust </titre>
<auteur>Eugene Levner1 , David Pinto(2,3) , Paolo Rosso2 , David Alcaide4 , R.R.K. Sharma5 </auteur>
<abstract>Abstract. Among various document clustering algorithms that have been proposed so far, the most useful are those that automatically reveal the number of clusters and assign each target document to exactly one cluster. However, in many real situations, there not exists an exact boundary between different clusters. In this work, we introduce a fuzzy version of the MajorClust algorithm. The proposed clustering method assigns documents to more than one category by taking into account a membership function for both, edges and nodes of the corresponding underlying graph. Thus, the clustering problem is formulated in terms of weighted fuzzy graphs. The fuzzy approach permits to decrease some negative effects which appear in clustering of large-sized corpora with noisy data.  1  </abstract>
<introduction>Introduction  Clustering analysis refers to the partitioning of a data set into subsets (clusters), so that the data in each subset (ideally) share some common trait, often proximity, according to some defined distance measure [1,2,3]. Clustering methods are usually classified with respect to their underlying algorithmic approaches: hierarchical, iterative (or partitional) and density based are some instances belonging to this classification. Hierarchical algorithms find successive clusters using previously established ones, whereas partitional algorithms determine all clusters at once. Hierarchical algorithms can be agglomerative (“bottom-up”) or divisive (“top-down”); agglomerative algorithms begin with each element as a separate cluster and merge them into successively larger clusters. Divisive algorithms begin with the whole set and proceed to divide it into successively smaller clusters. Iterative algorithms start with some initial clusters (their number either being unknown in advance or given a priori) and intend to successively improve the existing cluster set by changing their “representatives” (“centers of gravity”, “centroids”) , like in K-Means [3] or by iterative node-exchanging (like in [4]). </introduction>
<corp>An interesting density-based algorithm is MajorClust [5], which automatically reveals the number of clusters, unknown in advance, and successively increases the total “strength” or “connectivity” of the cluster set by cumulative attraction of nodes between the clusters. MajorClust [5] is one of the most promising and successful algorithms for unsupervised document clustering. This graph theory based algorithm assigns each document to that cluster the majority of its neighbours belong to. The node neighbourhood is calculated by using a specific similarity measure which is assumed to be the weight of each edge (similarity) between the nodes (documents) of the graph (corpus). MajorClust automatically reveals the number of clusters and assigns each target document to exactly one cluster. However, in many real situations, there not exists an exact boundary between different categories. Therefore, a different approach is needed in order to determine how to assign a document to more than one category. The traditional MajorClust algorithm deals with crisp (hard) data, whereas the proposed version, called F MajorClust, will use fuzzy data. We suggest to calculate a weigthed fuzzy graph with edges between any pairs of nodes that are supplied with fuzzy weights which may be either fuzzy numbers or linguistic variables. Thereafter, a fuzzy membership function will be used in order to determine the possible cluster a node belongs to. The main feature of the new algorithm, F -MajorClust, which differs from MajorClust, is that all the items (for example, the documents to be grouped) are allowed to belong to two and more clusters. The rest of this paper is structured as follows. The following section recalls the case study of the K-means algorithm and its fuzzy version. In Section 3 the traditional MajorClust algorithm is described whereas its fuzzy version is </corp>
<conclusion></conclusion>
<references>References 1. MacKay, D.J.: Information Theory, Inference and Learning Algorithms. Cambridge University Press (2003) 2. Mirkin, B.: Mathematical Classification and Clustering. Springer (1996) </references>
</article>
